{"ast":null,"code":"import API_URL from \"./requests\";\nexport async function getCustomers(companyID) {\n  try {\n    const response = await fetch(`${API_URL}/customer/${companyID}`, {\n      method: \"GET\",\n      credentials: \"include\"\n    });\n    if (!response.ok) {\n      throw new Error(`Get failed: ${response.statusText}`);\n    }\n    return response.json();\n  } catch (error) {\n    console.error(\"Error Get costomers data:\", error);\n    return null;\n  }\n}\nexport async function getCustomer(customerId) {\n  try {\n    const response = await fetch(`${API_URL}/customer/id/${customerId}`, {\n      method: \"GET\",\n      credentials: \"include\"\n    });\n    if (!response.ok) {\n      return null;\n    }\n    return response.json();\n  } catch (error) {\n    console.error(\"Error get customer data:\", error);\n    return null;\n  }\n}\nexport async function postCustomer(data) {\n  try {\n    const response = await fetch(`${API_URL}/customer/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n      throw new Error(`Post failed: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.log(\"error to post customer:\", error);\n    return null;\n  }\n}\nexport async function putCustomer(customerId, data) {\n  try {\n    const response = await fetch(`${API_URL}/customer/${customerId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n      throw new Error(`Update failed: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.log(\"error to put customer:\", error);\n    throw error;\n  }\n}\nexport async function deleteCustomer(customerId) {\n  try {\n    const response = await fetch(`${API_URL}/customer/${customerId}`, {\n      method: \"DELETE\",\n      credentials: \"include\"\n    });\n    if (!response.ok) {\n      throw new Error(`Delete failed: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.log(\"error to delete customer:\", error);\n    throw error;\n  }\n}","map":{"version":3,"names":["API_URL","getCustomers","companyID","response","fetch","method","credentials","ok","Error","statusText","json","error","console","getCustomer","customerId","postCustomer","data","headers","body","JSON","stringify","log","putCustomer","deleteCustomer"],"sources":["D:/GitHub/BillbookManagement/Frontend/src/requests/customerRequest.tsx"],"sourcesContent":["import { Customer } from \"../interfaces/Customer\";\r\nimport API_URL from \"./requests\";\r\n\r\nexport async function getCustomers(companyID: string) {\r\n  try {\r\n    const response = await fetch(`${API_URL}/customer/${companyID}`, {\r\n      method: \"GET\",\r\n      credentials: \"include\",\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(`Get failed: ${response.statusText}`);\r\n    }\r\n    return response.json();\r\n  } catch (error) {\r\n    console.error(\"Error Get costomers data:\", error);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function getCustomer(customerId: string) {\r\n  try {\r\n    const response = await fetch(`${API_URL}/customer/id/${customerId}`, {\r\n      method: \"GET\",\r\n      credentials: \"include\",\r\n    });\r\n    if (!response.ok) {\r\n      return null;\r\n    }\r\n    return response.json();\r\n  } catch (error) {\r\n    console.error(\"Error get customer data:\", error);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function postCustomer(data: Partial<Customer>) {\r\n  try {\r\n    const response = await fetch(`${API_URL}/customer/`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Post failed: ${response.statusText}`);\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.log(\"error to post customer:\", error);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function putCustomer(customerId: string, data: Partial<Customer>) {\r\n  try {\r\n    const response = await fetch(`${API_URL}/customer/${customerId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Update failed: ${response.statusText}`);\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.log(\"error to put customer:\", error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function deleteCustomer(customerId: string) {\r\n  try {\r\n    const response = await fetch(`${API_URL}/customer/${customerId}`, {\r\n      method: \"DELETE\",\r\n      credentials: \"include\",\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(`Delete failed: ${response.statusText}`);\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.log(\"error to delete customer:\", error);\r\n    throw error;\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}