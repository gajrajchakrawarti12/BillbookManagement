{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\VS studio\\\\web_devlopment\\\\Projects\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const checkAuth = async () => {\n      setIsLoading(true);\n      try {\n        await fetch(`${API_URL}/auth/refresh`, {\n          method: \"POST\",\n          credentials: \"include\",\n          // <-- Correct value here\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({}) // empty body\n        });\n        const res = await axios.get(`${API_URL}/auth/me`, {\n          withCredentials: true\n        });\n        const userData = res.data.user;\n        setUser({\n          ...userData\n        });\n      } catch (error) {\n        setUser(null);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    checkAuth();\n  }, []);\n  const login = async (username, password) => {\n    setIsLoading(true);\n    try {\n      const resLogin = await fetch(`${API_URL}/auth/login`, {\n        method: \"POST\",\n        body: JSON.stringify({\n          username,\n          password\n        }),\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (resLogin.status == 205) {\n        return false;\n      }\n      const res = await axios.get(`${API_URL}/auth/me`, {\n        withCredentials: true\n      });\n      const userData = res === null || res === void 0 ? void 0 : res.data.user;\n      setUser({\n        ...userData\n      });\n      return true;\n    } catch (error) {\n      console.error(\"Login failed\", error);\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const signup = async (name, username, password, role) => {\n    setIsLoading(true);\n    try {\n      await axios.post(`${API_URL}/auth/register`, {\n        username,\n        password,\n        fullName: name,\n        role: role.toUpperCase()\n      }, {\n        withCredentials: true\n      });\n      return true;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.log(\"Signup error:\", error);\n      console.error(\"Signup failed:\", (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || error);\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const logout = async () => {\n    try {\n      await axios.post(`${API_URL}/auth/logout`, {}, {\n        withCredentials: true\n      });\n    } catch (error) {\n      console.warn(\"Logout API failed\", error);\n    } finally {\n      setUser(null);\n    }\n  };\n  const checkValidUsername = async username => {\n    try {\n      const responce = await fetch(`${API_URL}/auth/username/${username}`, {\n        method: \"GET\",\n        credentials: \"include\"\n      });\n      if (responce.status == 205) {\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  };\n\n  // if (isLoading) {\n  //   return (\n  //     <>\n  //       <div role=\"status\" aria-live=\"polite\">\n  //         <Loader />\n  //       </div>\n  //     </>\n  //   );\n  // }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      signup,\n      logout,\n      isLoading,\n      checkValidUsername\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"YajQB7LURzRD+QP5gw0+K2TZIWA=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n}\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","React","createContext","useContext","useEffect","useState","axios","jsxDEV","_jsxDEV","AuthContext","undefined","API_URL","process","env","REACT_APP_API_URL","AuthProvider","children","user","setUser","isLoading","setIsLoading","checkAuth","fetch","method","credentials","headers","body","JSON","stringify","res","get","withCredentials","userData","data","error","login","username","password","resLogin","status","console","signup","name","role","post","fullName","toUpperCase","_error$response","_error$response$data","log","response","message","logout","warn","checkValidUsername","responce","Provider","value","fileName","lineNumber","columnNumber","_c","useAuth","context","Error","$RefreshReg$"],"sources":["D:/VS studio/web_devlopment/Projects/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport type { User } from \"../interfaces/User\";\nimport type { AuthContextType } from \"../interfaces/AuthContextType\";\nimport Loader from \"../pages/Loader\";\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const checkAuth = async () => {\n      setIsLoading(true);\n      try {\n        await fetch(`${API_URL}/auth/refresh`, {\n          method: \"POST\",\n          credentials: \"include\", // <-- Correct value here\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({}), // empty body\n        });\n        const res = await axios.get(`${API_URL}/auth/me`, {\n          withCredentials: true,\n        });\n        const userData = res.data.user;\n        setUser({ ...userData });\n      } catch (error) {\n        setUser(null);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    checkAuth();\n  }, []);\n\n  const login = async (\n    username: string,\n    password: string\n  ): Promise<boolean> => {\n    setIsLoading(true);\n    try {\n      const resLogin = await fetch(`${API_URL}/auth/login`, {\n        method: \"POST\",\n        body: JSON.stringify({ username, password }),\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (resLogin.status == 205) {\n        return false\n      }\n\n      const res = await axios.get(`${API_URL}/auth/me`, {\n        withCredentials: true,\n      });\n      const userData = res?.data.user;\n      setUser({ ...userData });\n      return true;\n    } catch (error) {\n      console.error(\"Login failed\", error);\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const signup = async (\n    name: string,\n    username: string,\n    password: string,\n    role: string\n  ): Promise<boolean> => {\n    setIsLoading(true);\n    try {\n      await axios.post(\n        `${API_URL}/auth/register`,\n        {\n          username,\n          password,\n          fullName: name,\n          role: role.toUpperCase(),\n        },\n        { withCredentials: true }\n      );\n      return true;\n    } catch (error: any) {\n      console.log(\"Signup error:\", error);\n      console.error(\n        \"Signup failed:\",\n        error?.response?.data?.message || error.message || error\n      );\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await axios.post(`${API_URL}/auth/logout`, {}, { withCredentials: true });\n    } catch (error) {\n      console.warn(\"Logout API failed\", error);\n    } finally {\n      setUser(null);\n    }\n  };\n\n  const checkValidUsername = async (username: string) => {\n    try {\n      const responce = await fetch(`${API_URL}/auth/username/${username}`, {\n        method: \"GET\",\n        credentials: \"include\",\n      });\n      if (responce.status == 205) {\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  };\n\n  // if (isLoading) {\n  //   return (\n  //     <>\n  //       <div role=\"status\" aria-live=\"polite\">\n  //         <Loader />\n  //       </div>\n  //     </>\n  //   );\n  // }\n\n  return (\n    <AuthContext.Provider\n      value={{ user, login, signup, logout, isLoading, checkValidUsername }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}