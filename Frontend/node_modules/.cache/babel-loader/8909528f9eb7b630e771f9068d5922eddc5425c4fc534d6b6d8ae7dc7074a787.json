{"ast":null,"code":"import API_URL from \"./requests\";\nexport async function getProducts(companyID) {\n  try {\n    const response = await fetch(`${API_URL}/product/${companyID}`, {\n      method: \"GET\",\n      credentials: \"include\"\n    });\n    if (!response.ok) {\n      throw new Error(`Get failed: ${response.statusText}`);\n    }\n    return response.json();\n  } catch (error) {\n    console.error(\"Error get product data:\", error);\n    throw error;\n  }\n}\nexport async function getProduct(ProductId) {\n  try {\n    const response = await fetch(`${API_URL}/Product/id/${ProductId}`, {\n      method: \"GET\",\n      credentials: \"include\"\n    });\n    if (!response.ok) {\n      return null;\n    }\n    return response.json();\n  } catch (error) {\n    console.error(\"Error get Product data:\", error);\n    return null;\n  }\n}\nexport async function postProduct(data) {\n  try {\n    const response = await fetch(`${API_URL}/Product/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n      throw new Error(`Post failed: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.log(\"error to post Product:\", error);\n    throw error;\n  }\n}\nexport async function putProduct(ProductId, data) {\n  try {\n    const response = await fetch(`${API_URL}/Product/${ProductId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n      throw new Error(`Update failed: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.log(\"error to post company:\", error);\n    throw error;\n  }\n}\nexport async function deleteProduct(ProductId) {\n  try {\n    const response = await fetch(`${API_URL}/Product/${ProductId}`, {\n      method: \"DELETE\",\n      credentials: \"include\"\n    });\n    if (!response.ok) {\n      throw new Error(`Delete failed: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.log(\"error to post company:\", error);\n    throw error;\n  }\n}","map":{"version":3,"names":["API_URL","getProducts","companyID","response","fetch","method","credentials","ok","Error","statusText","json","error","console","getProduct","ProductId","postProduct","data","headers","body","JSON","stringify","log","putProduct","deleteProduct"],"sources":["D:/VS studio/web_devlopment/Projects/frontend/src/requests/productRequset.tsx"],"sourcesContent":["import { Product } from \"../interfaces/Product\";\r\nimport API_URL from \"./requests\";\r\n\r\nexport async function getProducts(companyID: string) {\r\n  try {\r\n    const response = await fetch(`${API_URL}/product/${companyID}`, {\r\n      method: \"GET\",\r\n      credentials: \"include\",\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(`Get failed: ${response.statusText}`);\r\n    }\r\n    return response.json();\r\n  } catch (error) {\r\n    console.error(\"Error get product data:\", error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function getProduct(ProductId: string) {\r\n  try {\r\n    const response = await fetch(`${API_URL}/Product/id/${ProductId}`, {\r\n      method: \"GET\",\r\n      credentials: \"include\",\r\n    });\r\n    if (!response.ok) {\r\n      return null;\r\n    }\r\n    return response.json();\r\n  } catch (error) {\r\n    console.error(\"Error get Product data:\", error);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function postProduct(data: Partial<Product>) {\r\n  try {\r\n    const response = await fetch(`${API_URL}/Product/`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Post failed: ${response.statusText}`);\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.log(\"error to post Product:\", error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function putProduct(ProductId: string, data: Partial<Product>) {\r\n  try {\r\n    const response = await fetch(`${API_URL}/Product/${ProductId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Update failed: ${response.statusText}`);\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.log(\"error to post company:\", error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function deleteProduct(ProductId: string) {\r\n  try {\r\n    const response = await fetch(`${API_URL}/Product/${ProductId}`, {\r\n      method: \"DELETE\",\r\n      credentials: \"include\",\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(`Delete failed: ${response.statusText}`);\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.log(\"error to post company:\", error);\r\n    throw error;\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}